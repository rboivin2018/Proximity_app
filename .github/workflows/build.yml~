name: Mobile App Build

on:
  push:
   branches: [ master ]
        pull_request:
	    branches: [ main, develop ]

jobs:
  install-and-test:
      runs-on: ubuntu-latest
          steps:
	        - name: Checkout code
		        uses: actions/checkout@v3

      - name: Setup Node.js
              uses: actions/setup-node@v3
	              with:
		                node-version: 18
				          cache: 'yarn'

      - name: Install dependencies
              run: yarn install --frozen-lockfile

      - name: Run TypeScript type check
              run: yarn tsc --noEmit

      - name: Run tests
              run: yarn test

      - name: Cache node modules
              uses: actions/cache@v3
	              with:
		                path: node_modules
				          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
					            restore-keys: |
						                ${{ runner.os }}-node-

  build-android:
      needs: install-and-test
          runs-on: ubuntu-latest
	      steps:
	            - name: Checkout code
		            uses: actions/checkout@v3

      - name: Setup Node.js
              uses: actions/setup-node@v3
	              with:
		                node-version: 18
				          cache: 'yarn'

      - name: Setup Java JDK
              uses: actions/setup-java@v3
	              with:
		                distribution: 'zulu'
				          java-version: '11'

      - name: Restore node modules cache
              uses: actions/cache@v3
	              with:
		                path: node_modules
				          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
              run: yarn install --frozen-lockfile

      - name: Cache Gradle
              uses: actions/cache@v3
	              with:
		                path: |
				            ~/.gradle/caches
					                ~/.gradle/wrapper
							          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
								            restore-keys: |
									                ${{ runner.os }}-gradle-

      - name: Make Gradlew Executable
              run: cd android && chmod +x ./gradlew

      - name: Build Android Release
              run: |
	                cd android
			          ./gradlew bundleRelease

      - name: Upload Android Release Bundle
              uses: actions/upload-artifact@v3
	              with:
		                name: app-release-bundle
				          path: android/app/build/outputs/bundle/release/app-release.aab

      - name: Build Android APK
              run: |
	                cd android
			          ./gradlew assembleRelease

      - name: Upload Android APK
              uses: actions/upload-artifact@v3
	              with:
		                name: app-release-apk
				          path: android/app/build/outputs/apk/release/app-release.apk
